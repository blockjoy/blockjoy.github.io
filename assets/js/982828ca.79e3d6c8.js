"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2344],{15680:(e,t,n)=>{n.d(t,{Z:()=>i});var o,r,s=n(67294);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}const i=e=>{let{title:t,titleId:n,...i}=e;return s.createElement("svg",a({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},i),t?s.createElement("title",{id:n},t):null,o||(o=s.createElement("path",{d:"M9 1a1 1 0 0 0-1-1H1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h3.5V4.5a1 1 0 0 1 1-1H9V1Z",fill:"#F8FAF6"})),r||(r=s.createElement("path",{d:"M11.5 5h-5a.5.5 0 0 0-.5.5v6a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-6a.5.5 0 0 0-.5-.5Z",fill:"#F8FAF6"})))}},70630:(e,t,n)=>{n.d(t,{p:()=>s});var o=n(67294);const r="base_L3V1",s=e=>{let{method:t,name:n}=e;return o.createElement("h2",{className:r},t&&o.createElement("span",null,t)," ",n&&o.createElement("span",null,n))}},77583:(e,t,n)=>{n.d(t,{D:()=>h});var o=n(67294),r=n(87892);const s="wrapper_d4Gc",a="base_cZP3",i="heading_kxJX",l="select_XVTu",c="buttonWrapper_Ucky",d="button_Pj6S",p="copyButtonSuccess_ASuz",m="copyButtonText_cmI7",u="copyButtonSuccessIcon_tD3P";var T;function y(){return y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},y.apply(this,arguments)}const k=e=>{let{title:t,titleId:n,...r}=e;return o.createElement("svg",y({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},r),t?o.createElement("title",{id:n},t):null,T||(T=o.createElement("path",{d:"m3.275 4.461-1.788 1.54 1.788 1.538a.596.596 0 0 1 .21.407.619.619 0 0 1-.132.441.585.585 0 0 1-.396.214.563.563 0 0 1-.425-.14l-2.323-2A.598.598 0 0 1 0 6.001a.617.617 0 0 1 .209-.462l2.323-2a.568.568 0 0 1 .814.08.613.613 0 0 1-.071.842ZM11.79 5.54l-2.323-2a.575.575 0 0 0-.425-.14.567.567 0 0 0-.396.214.607.607 0 0 0-.132.44.615.615 0 0 0 .21.408l1.788 1.54-1.788 1.538a.596.596 0 0 0-.21.407.619.619 0 0 0 .132.441.585.585 0 0 0 .396.214.563.563 0 0 0 .425-.14l2.323-2a.6.6 0 0 0 .209-.46.617.617 0 0 0-.209-.462ZM7.747 1.036a.563.563 0 0 0-.627.159.604.604 0 0 0-.117.2l-3.097 8.8a.618.618 0 0 0 .02.459.588.588 0 0 0 .526.346c.119 0 .235-.038.333-.108a.598.598 0 0 0 .212-.287l3.097-8.8a.618.618 0 0 0-.153-.648.578.578 0 0 0-.194-.12Z",fill:"#F8FAF6"})))};var b=n(15680),w=n(69612);const h=e=>{let{codes:t,defaultLanguage:n="go"}=e;const[T,y]=(0,o.useState)(!1),[h,v]=(0,o.useState)(!0),[g,C]=(0,o.useState)(n),E=(0,o.useMemo)((()=>t?.find((e=>e.language===g))),[t,g]),x=(0,o.useMemo)((()=>t?.map((e=>{let{language:t}=e;return t}))),[t]),B=(0,o.useMemo)((()=>E?.codeShorten&&h?E?.codeShorten:E?.code),[E,h]);return o.createElement("div",{className:s},o.createElement("div",{className:i},o.createElement("select",{className:l,onChange:e=>{var t;(t=e.currentTarget.value,["typescript","javascript","python","go","rust"].includes(t))&&C(e.currentTarget.value)}},x.map((e=>o.createElement("option",{value:e,key:e},e)))),o.createElement("div",{className:c},E?.codeShorten&&o.createElement("button",{className:d,onClick:()=>v(!h)},o.createElement("span",null,h?"Show Full Code":"Show Less Code"),o.createElement(k,null)),o.createElement("button",{onClick:()=>{navigator.clipboard.writeText(B).then((()=>{y(!0),setTimeout((()=>{y(!1)}),1e3)})).catch()},className:T?p:d},o.createElement(w.Z,{className:u}),o.createElement("span",{className:m},o.createElement("span",null,"Copy"),o.createElement(b.Z,null))))),E?o.createElement("div",{className:a},o.createElement(r.dn,{text:B,language:E.language,theme:r.cL,codeBlock:!0})):null)}},27988:(e,t,n)=>{n.d(t,{i:()=>r});var o=n(67294);const r=e=>{let{children:t}=e;return o.createElement("table",null,t)}},21455:(e,t,n)=>{n.d(t,{R:()=>r});var o=n(67294);const r=e=>{let{children:t}=e;return o.createElement("tbody",null,t)}},51885:(e,t,n)=>{n.d(t,{s:()=>d});var o,r=n(67294);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},s.apply(this,arguments)}const a=e=>{let{title:t,titleId:n,...a}=e;return r.createElement("svg",s({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?r.createElement("title",{id:n},t):null,o||(o=r.createElement("path",{d:"m9.72 5.28-5-5a1 1 0 0 0-1.415 1.415l4.293 4.293-4.293 4.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414Z",fill:"#5F615D"})))},i="cell_xH13",l="cell--active_xKr9",c="cellClickable_VRgO",d=e=>{let{items:t,children:n,rowCounter:o=0}=e;const[s,d]=(0,r.useState)(!1),p=e=>n&&0===e,m=e=>0===e&&n?{paddingLeft:12+20*o+"px"}:0===e?{paddingLeft:36+20*o+"px"}:void 0;return r.createElement(r.Fragment,null,r.createElement("tr",null,t?.map(((e,t)=>r.createElement("td",{className:p(t)?c:void 0,onClick:p(t)?()=>d(!s):void 0,style:m(t),key:t},p(t)?r.createElement("span",{className:s?l:i},r.createElement(a,null),e):e)))),r.createElement(r.Fragment,null,s&&n))}},97022:(e,t,n)=>{n.d(t,{s:()=>r});var o=n(67294);const r=e=>{let{items:t}=e;return o.createElement("thead",null,o.createElement("tr",null,t.map(((e,t)=>o.createElement("th",{key:t},e)))))}},54968:(e,t,n)=>{n.d(t,{s:()=>i});var o=n(67294);const r="info_eCVA",s="warning_Cn6H",a="base_cmOb",i=e=>{let{text:t,info:n,warning:i,infoInFront:l,warningInFront:c}=e;return o.createElement("div",{className:a},c&&o.createElement("span",{className:s},c),l&&o.createElement("span",{className:r},l),o.createElement("span",null,t),i&&o.createElement("span",{className:s},i),n&&o.createElement("span",{className:r},n)," ")}},36348:(e,t,n)=>{n.d(t,{I:()=>s});var o=n(67294);const r="base_PRYo",s=e=>{let{children:t}=e;return o.createElement("p",{className:r},o.createElement("span",null,t))}},43906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>y,default:()=>g,frontMatter:()=>T,metadata:()=>k,toc:()=>w});var o=n(87462),r=(n(67294),n(3905)),s=n(36348),a=n(70630),i=n(54968),l=n(27988),c=n(97022),d=n(21455),p=n(51885);const m=[{code:'package main\n\nimport (\n   "context"\n   "crypto/tls"\n   "crypto/x509"\n   "fmt"\n   v1 "github.com/blockjoy/api/sdk/go/blockjoy/v1" \n   "google.golang.org/grpc"\n   "google.golang.org/grpc/credentials"\n   "log"\n   "time"\n)\n\nconst (\n   blockchainServiceAddress = "unknown-grpc:443" \n)\n\nfunc main() {\n   ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second)\n   defer cancel()\n\n   // Set up a connection to the server.\n   blockchainServiceConn, err := grpc.DialContext(ctx, blockchainServiceAddress, getSecureOptions()...) \n   if err != nil {                                                                                      \n      log.Fatalf("did not connect: %v", err) \n   } \n   defer blockchainServiceConn.Close() \n   blockchainService := v1.NewBlockchainServiceClient(blockchainServiceConn) \n   r1, _ := blockchainService.List(ctx, &v1.BlockchainServiceListRequest{})\n   fmt.Println(r1)\n}\n\nfunc getSecureOptions() []grpc.DialOption {\n   systemRoots, err := x509.SystemCertPool()\n   if err != nil {\n      log.Fatal(err)\n   }\n   cred := credentials.NewTLS(&tls.Config{\n      RootCAs: systemRoots,\n   })\n   return []grpc.DialOption{grpc.WithTransportCredentials(cred), grpc.WithBlock()}\n}\n',codeShorten:"resp, _ := blockchainService.List(ctx, &v1.BlockchainServiceListRequest{})\nfmt.Println(resp)",language:"go"},{code:'import React, { useEffect, useState } from \'react\'\nimport { grpc } from "@improbable-eng/grpc-web"\nimport { BlockchainServiceClient } from "api/sdk/ts/blockjoy/v1/blockchain_pb_service"\nimport { BlockchainServiceListRequest, BlockchainServiceListResponse } from "api/sdk/ts/blockjoy/v1/blockchain_pb"\n\nvar blockchainService0 = new BlockchainServiceClient(\'https://unknown-grpc-web\')\nfunction App(){\n    const [response, setResponse] = useState<string>("")\n    useEffect(() => { \n        const blockchainservicelistrequest = new BlockchainServiceListRequest()\n        \n        blockchainService0.list(blockchainservicelistrequest, getMetadata(), (err, value:BlockchainServiceListResponse|null) => {\n            setResponse(JSON.stringify(err ? err : value))\n        })\n    }, [])\n    return <>\n        <ol>\n        {response}\n        </ol>\n    </>\n}\nconst getMetadata = () => {\n    const meta = new grpc.Metadata()\n    return meta\n}\nexport default App;',codeShorten:'const blockchainservicelistrequest = new BlockchainServiceListRequest();\n\nservice.list(blockchainservicelistrequest, (err, value:BlockchainServiceListResponse|null) => {\n    const resp = JSON.stringify(err ? err : value);\n    console.log("received ", resp);\n})\n',language:"typescript"},{code:'import React, { useEffect, useState } from \'react\'\nimport { grpc } from "@improbable-eng/grpc-web"\nimport { BlockchainServiceListResponse, BlockchainServiceListRequest } from "api/sdk/ts/blockjoy/v1/blockchain_pb"\nimport { BlockchainServiceClient } from "api/sdk/ts/blockjoy/v1/blockchain_pb_service"\n\nvar blockchainService0 = new BlockchainServiceClient(\'https://unknown-grpc-web\')\nfunction App(){\n    const [response, setResponse] = useState("")\n    useEffect(() => { \n        const blockchainservicelistrequest = new BlockchainServiceListRequest()\n        \n        blockchainService0.list(blockchainservicelistrequest, getMetadata(), (err, value) => {\n            setResponse(JSON.stringify(err ? err : value))\n        })\n    }, [])\n    return <>\n        <ol>\n        {response}\n        </ol>\n    </>\n}\nconst getMetadata = () => {\n    const meta = new grpc.Metadata()\n    return meta\n}\nexport default App;',codeShorten:'const blockchainservicelistrequest = new BlockchainServiceListRequest();\n\nservice.list(blockchainservicelistrequest, (err, value) => {\n    const resp = JSON.stringify(err ? err : value);\n    console.log("received ", resp);\n})',language:"javascript"},{code:'extern crate api;\nuse tonic::transport::Channel;\n\nuse api::blockjoy::v1::blockchain_service_client::BlockchainServiceClient;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n  let channel = Channel::from_static("unknown-grpc")\n    .connect()\n    .await?;\n  let mut client = BlockchainServiceClient::new(channel); \n\n  let request = tonic::Request::new(\n    ());\n// sending request and waiting for response\n  let response = client.list(request).await?.into_inner();\n  println!("RESPONSE={:?}", response);\n  Ok(())\n}\n',language:"rust"}];var u=n(77583);const T={sidebar_position:3},y="List",k={unversionedId:"blockchain-service/list",id:"blockchain-service/list",title:"List",description:"Returns a list of all blockchains.",source:"@site/docs/blockchain-service/list.mdx",sourceDirName:"blockchain-service",slug:"/blockchain-service/list",permalink:"/docs/blockchain-service/list",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/blockchain-service/list.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"apiSidebar",previous:{title:"Get",permalink:"/docs/blockchain-service/get"},next:{title:"Command Service",permalink:"/docs/command-service/"}},b={},w=[],h={toc:w},v="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(v,(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"list"},"List"),(0,r.kt)(a.p,{method:"rpc",name:"Get",mdxType:"ApiMethod"}),(0,r.kt)("p",null,"Returns a list of all blockchains."),(0,r.kt)(a.p,{method:"requests",name:"BlockchainServiceListRequest",mdxType:"ApiMethod"}),(0,r.kt)(s.I,{mdxType:"VersionType"},"blockjoy.v1.BlockchainServiceListRequest"),(0,r.kt)(u.D,{codes:m,mdxType:"CustomCodeBlock"}),(0,r.kt)(a.p,{method:"returns",name:"BlockchainServiceListResponse",mdxType:"ApiMethod"}),(0,r.kt)(s.I,{mdxType:"VersionType"},"blockjoy.v1.BlockchainServiceListResponse"),(0,r.kt)(l.i,{mdxType:"Table"},(0,r.kt)(c.s,{items:["Field","Type","Description"],mdxType:"TableHead"}),(0,r.kt)(d.R,{mdxType:"TableBody"},(0,r.kt)(p.s,{items:["blockchains",(0,r.kt)(i.s,{text:"Blockchain",info:"repeated",mdxType:"TableCellWithOption"}),""],mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["created_at","Timestamp",""],rowCounter:1,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["nanos","int (32 bit)",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["seconds","int (64 bit)",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:["description","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["id","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["name","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["networks",(0,r.kt)(i.s,{text:"BlockchainNetwork",info:"repeated",mdxType:"TableCellWithOption"}),""],rowCounter:1,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["name","string",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["net_type","BlockchainNetworkType",""],rowCounter:2,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["BLOCKCHAIN_NETWORK_TYPE_UNSPECIFIED","= 0",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_NETWORK_TYPE_DEV","= 1",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_NETWORK_TYPE_TEST","= 2",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_NETWORK_TYPE_MAIN","= 3",""],rowCounter:3,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:["url","string",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:["nodes_types",(0,r.kt)(i.s,{text:"SupportedNodeType",info:"repeated",mdxType:"TableCellWithOption"}),"This list contains all the possible node types that can be created for this kind of blockchain."],rowCounter:1,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["node_type","NodeType",""],rowCounter:2,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["NODE_TYPE_UNSPECIFIED","= 0",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_MINER","= 1",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_ETL","= 2",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_VALIDATOR","= 3",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_API","= 4",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_ORACLE","= 5",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_RELAY","= 6",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_EXECUTION","= 7",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_BEACON","= 8",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_MEVBOOST","= 9",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_NODE","= 10",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_FULLNODE","= 11",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["NODE_TYPE_LIGHTNODE","= 12",""],rowCounter:3,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:["properties",(0,r.kt)(i.s,{text:"SupportedNodeProperty",info:"repeated",mdxType:"TableCellWithOption"}),""],rowCounter:2,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:[(0,r.kt)(i.s,{text:"default",warning:"optional",mdxType:"TableCellWithOption"}),"string",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["disabled","boolean",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["name","string",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["required","boolean",""],rowCounter:3,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["ui_type","UiType",""],rowCounter:3,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["UI_TYPE_UNSPECIFIED","= 0",""],rowCounter:4,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["UI_TYPE_SWITCH","= 1",""],rowCounter:4,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["UI_TYPE_PASSWORD","= 2",""],rowCounter:4,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["UI_TYPE_TEXT","= 3",""],rowCounter:4,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["UI_TYPE_FILE_UPLOAD","= 4",""],rowCounter:4,mdxType:"TableBodyRow"}))),(0,r.kt)(p.s,{items:["version","string",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:[(0,r.kt)(i.s,{text:"project_url",warning:"optional",mdxType:"TableCellWithOption"}),"string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:[(0,r.kt)(i.s,{text:"repo_url",warning:"optional",mdxType:"TableCellWithOption"}),"string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["status","BlockchainStatus",""],rowCounter:1,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["BLOCKCHAIN_STATUS_UNSPECIFIED","= 0",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_STATUS_DEVELOPMENT","= 1",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_STATUS_ALPHA","= 2",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_STATUS_BETA","= 3",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_STATUS_PRODUCTION","= 4",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["BLOCKCHAIN_STATUS_DELETED","= 5",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:[(0,r.kt)(i.s,{text:"updated_at",warning:"optional",mdxType:"TableCellWithOption"}),"Timestamp",""],rowCounter:1,mdxType:"TableBodyRow"},(0,r.kt)(p.s,{items:["nanos","int (32 bit)",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,r.kt)(p.s,{items:["seconds","int (64 bit)",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,r.kt)(p.s,{items:[(0,r.kt)(i.s,{text:"version",warning:"optional",mdxType:"TableCellWithOption"}),"string",""],rowCounter:1,mdxType:"TableBodyRow"})))))}g.isMDXComponent=!0}}]);