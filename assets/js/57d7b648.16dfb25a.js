"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[889],{15680:(e,t,n)=>{n.d(t,{Z:()=>i});var r,o,s=n(67294);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}const i=e=>{let{title:t,titleId:n,...i}=e;return s.createElement("svg",a({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},i),t?s.createElement("title",{id:n},t):null,r||(r=s.createElement("path",{d:"M9 1a1 1 0 0 0-1-1H1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h3.5V4.5a1 1 0 0 1 1-1H9V1Z",fill:"#F8FAF6"})),o||(o=s.createElement("path",{d:"M11.5 5h-5a.5.5 0 0 0-.5.5v6a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-6a.5.5 0 0 0-.5-.5Z",fill:"#F8FAF6"})))}},69840:(e,t,n)=>{n.d(t,{q:()=>r});const r=[{code:'package main\n\nimport (\n   "context"\n   "crypto/tls"\n   "crypto/x509"\n   "fmt"\n   v1 "github.com/blockjoy/api/sdk/go/blockjoy/v1" \n   "google.golang.org/grpc"\n   "google.golang.org/grpc/credentials"\n   "log"\n   "time"\n)\n\nconst (\n   hostProvisionServiceAddress = "unknown-grpc:443" \n)\n\nfunc main() {\n   ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second)\n   defer cancel()\n\n   // Set up a connection to the server.\n   hostProvisionServiceConn, err := grpc.DialContext(ctx, hostProvisionServiceAddress, getSecureOptions()...) \n   if err != nil {                                                                                            \n      log.Fatalf("did not connect: %v", err) \n   } \n   defer hostProvisionServiceConn.Close() \n   hostProvisionService := v1.NewHostProvisionServiceClient(hostProvisionServiceConn) \n   r1, _ := hostProvisionService.Create(ctx, &v1.HostProvisionServiceCreateRequest{})\n   fmt.Println(r1)\n}\n\nfunc getSecureOptions() []grpc.DialOption {\n   systemRoots, err := x509.SystemCertPool()\n   if err != nil {\n      log.Fatal(err)\n   }\n   cred := credentials.NewTLS(&tls.Config{\n      RootCAs: systemRoots,\n   })\n   return []grpc.DialOption{grpc.WithTransportCredentials(cred), grpc.WithBlock()}\n}\n',codeShorten:"resp, _ := hostProvisionService.Create(ctx, &v1.HostProvisionServiceCreateRequest{})\nfmt.Println(resp)",language:"go"},{code:'import React, { useEffect, useState } from \'react\'\nimport { grpc } from "@improbable-eng/grpc-web"\nimport { HostProvisionServiceClient } from "api/sdk/ts/blockjoy/v1/host_provision_pb_service"\nimport { HostProvisionServiceCreateRequest, HostProvisionServiceCreateResponse } from "api/sdk/ts/blockjoy/v1/host_provision_pb"\n\nvar hostProvisionService0 = new HostProvisionServiceClient(\'https://unknown-grpc-web\')\nfunction App(){\n    const [response, setResponse] = useState<string>("")\n    useEffect(() => { \n        const hostprovisionservicecreaterequest = new HostProvisionServiceCreateRequest()\n        \n        hostProvisionService0.create(hostprovisionservicecreaterequest, getMetadata(), (err, value:HostProvisionServiceCreateResponse|null) => {\n            setResponse(JSON.stringify(err ? err : value))\n        })\n    }, [])\n    return <>\n        <ol>\n        {response}\n        </ol>\n    </>\n}\nconst getMetadata = () => {\n    const meta = new grpc.Metadata()\n    return meta\n}\nexport default App;',codeShorten:'const hostprovisionservicecreaterequest = new HostProvisionServiceCreateRequest();\n\nservice.create(hostprovisionservicecreaterequest, (err, value:HostProvisionServiceCreateResponse|null) => {\n    const resp = JSON.stringify(err ? err : value);\n    console.log("received ", resp);\n})',language:"typescript"},{code:'import React, { useEffect, useState } from \'react\'\nimport { grpc } from "@improbable-eng/grpc-web"\nimport { HostProvisionServiceClient } from "api/sdk/ts/blockjoy/v1/host_provision_pb_service"\nimport { HostProvisionServiceCreateRequest, HostProvisionServiceCreateResponse } from "api/sdk/ts/blockjoy/v1/host_provision_pb"\n\nvar hostProvisionService0 = new HostProvisionServiceClient(\'https://unknown-grpc-web\')\nfunction App(){\n    const [response, setResponse] = useState("")\n    useEffect(() => { \n        const hostprovisionservicecreaterequest = new HostProvisionServiceCreateRequest()\n        \n        hostProvisionService0.create(hostprovisionservicecreaterequest, getMetadata(), (err, value) => {\n            setResponse(JSON.stringify(err ? err : value))\n        })\n    }, [])\n    return <>\n        <ol>\n        {response}\n        </ol>\n    </>\n}\nconst getMetadata = () => {\n    const meta = new grpc.Metadata()\n    return meta\n}\nexport default App;',codeShorten:'const hostprovisionservicecreaterequest = new HostProvisionServiceCreateRequest();\n\nservice.create(hostprovisionservicecreaterequest, (err, value) => {\n    const resp = JSON.stringify(err ? err : value);\n    console.log("received ", resp);\n})',language:"javascript"},{code:'extern crate api;\nuse tonic::transport::Channel;\n\nuse api::blockjoy::v1::host_provision_service_client::HostProvisionServiceClient;\nuse api::blockjoy::v1::HostProvisionServiceCreateRequest;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n  let channel = Channel::from_static("unknown-grpc")\n    .connect()\n    .await?;\n  let mut client = HostProvisionServiceClient::new(channel); \n\n  let request = tonic::Request::new(\n    HostProvisionServiceCreateRequest{\n      ip_gateway: None,\n      ip_range_from: None,\n      ip_range_to: None,\n      org_id: None\n    });\n// sending request and waiting for response\n  let response = client.create(request).await?.into_inner();\n  println!("RESPONSE={:?}", response);\n  Ok(())\n}',language:"rust"}]},31531:(e,t,n)=>{n.d(t,{p:()=>s});var r=n(67294);const o="base_L3V1",s=e=>{let{method:t,name:n}=e;return r.createElement("h2",{className:o},t&&r.createElement("span",null,t)," ",n&&r.createElement("span",null,n))}},98238:(e,t,n)=>{n.d(t,{D:()=>k});var r=n(67294),o=n(87892);const s="wrapper_d4Gc",a="base_cZP3",i="heading_kxJX",l="select_XVTu",c="buttonWrapper_Ucky",p="button_Pj6S",d="copyButtonSuccess_ASuz",m="copyButtonText_cmI7",u="copyButtonSuccessIcon_tD3P";var v;function g(){return g=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},g.apply(this,arguments)}const h=e=>{let{title:t,titleId:n,...o}=e;return r.createElement("svg",g({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},o),t?r.createElement("title",{id:n},t):null,v||(v=r.createElement("path",{d:"m3.275 4.461-1.788 1.54 1.788 1.538a.596.596 0 0 1 .21.407.619.619 0 0 1-.132.441.585.585 0 0 1-.396.214.563.563 0 0 1-.425-.14l-2.323-2A.598.598 0 0 1 0 6.001a.617.617 0 0 1 .209-.462l2.323-2a.568.568 0 0 1 .814.08.613.613 0 0 1-.071.842ZM11.79 5.54l-2.323-2a.575.575 0 0 0-.425-.14.567.567 0 0 0-.396.214.607.607 0 0 0-.132.44.615.615 0 0 0 .21.408l1.788 1.54-1.788 1.538a.596.596 0 0 0-.21.407.619.619 0 0 0 .132.441.585.585 0 0 0 .396.214.563.563 0 0 0 .425-.14l2.323-2a.6.6 0 0 0 .209-.46.617.617 0 0 0-.209-.462ZM7.747 1.036a.563.563 0 0 0-.627.159.604.604 0 0 0-.117.2l-3.097 8.8a.618.618 0 0 0 .02.459.588.588 0 0 0 .526.346c.119 0 .235-.038.333-.108a.598.598 0 0 0 .212-.287l3.097-8.8a.618.618 0 0 0-.153-.648.578.578 0 0 0-.194-.12Z",fill:"#F8FAF6"})))};var y=n(15680),b=n(69612);const k=e=>{let{codes:t,defaultLanguage:n="go"}=e;const[v,g]=(0,r.useState)(!1),[k,w]=(0,r.useState)(!0),[f,C]=(0,r.useState)(n),S=(0,r.useMemo)((()=>t?.find((e=>e.language===f))),[t,f]),T=(0,r.useMemo)((()=>t?.map((e=>{let{language:t}=e;return t}))),[t]),x=(0,r.useMemo)((()=>S?.codeShorten&&k?S?.codeShorten:S?.code),[S,k]);return r.createElement("div",{className:s},r.createElement("div",{className:i},r.createElement("select",{className:l,onChange:e=>{var t;(t=e.currentTarget.value,["typescript","javascript","python","go","rust"].includes(t))&&C(e.currentTarget.value)}},T.map((e=>r.createElement("option",{value:e,key:e},e)))),r.createElement("div",{className:c},S?.codeShorten&&r.createElement("button",{className:p,onClick:()=>w(!k)},r.createElement("span",null,k?"Show Full Code":"Show Less Code"),r.createElement(h,null)),r.createElement("button",{onClick:()=>{navigator.clipboard.writeText(x).then((()=>{g(!0),setTimeout((()=>{g(!1)}),1e3)})).catch()},className:v?d:p},r.createElement(b.Z,{className:u}),r.createElement("span",{className:m},r.createElement("span",null,"Copy"),r.createElement(y.Z,null))))),S?r.createElement("div",{className:a},r.createElement(o.dn,{text:x,language:S.language,theme:o.cL,codeBlock:!0})):null)}},27988:(e,t,n)=>{n.d(t,{i:()=>o});var r=n(67294);const o=e=>{let{children:t}=e;return r.createElement("table",null,t)}},21455:(e,t,n)=>{n.d(t,{R:()=>o});var r=n(67294);const o=e=>{let{children:t}=e;return r.createElement("tbody",null,t)}},32275:(e,t,n)=>{n.d(t,{s:()=>p});var r,o=n(67294);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s.apply(this,arguments)}const a=e=>{let{title:t,titleId:n,...a}=e;return o.createElement("svg",s({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?o.createElement("title",{id:n},t):null,r||(r=o.createElement("path",{d:"m9.72 5.28-5-5a1 1 0 0 0-1.415 1.415l4.293 4.293-4.293 4.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414Z",fill:"#5F615D"})))},i="cell_xH13",l="cell--active_xKr9",c="cellClickable_VRgO",p=e=>{let{items:t,children:n,rowCounter:r=0}=e;const[s,p]=(0,o.useState)(!1),d=e=>n&&0===e,m=e=>0===e&&n?{paddingLeft:12+20*r+"px"}:0===e?{paddingLeft:36+20*r+"px"}:void 0;return o.createElement(o.Fragment,null,o.createElement("tr",null,t?.map(((e,t)=>o.createElement("td",{className:d(t)?c:void 0,onClick:d(t)?()=>p(!s):void 0,style:m(t),key:t},d(t)?o.createElement("span",{className:s?l:i},o.createElement(a,null),e):e)))),o.createElement(o.Fragment,null,s&&n))}},97022:(e,t,n)=>{n.d(t,{s:()=>o});var r=n(67294);const o=e=>{let{items:t}=e;return r.createElement("thead",null,r.createElement("tr",null,t.map(((e,t)=>r.createElement("th",{key:t},e)))))}},42868:(e,t,n)=>{n.d(t,{s:()=>i});var r=n(67294);const o="info_eCVA",s="warning_Cn6H",a="base_cmOb",i=e=>{let{text:t,info:n,warning:i,infoInFront:l,warningInFront:c}=e;return r.createElement("div",{className:a},c&&r.createElement("span",{className:s},c),l&&r.createElement("span",{className:o},l),r.createElement("span",null,t),i&&r.createElement("span",{className:s},i),n&&r.createElement("span",{className:o},n)," ")}},34695:(e,t,n)=>{n.d(t,{I:()=>s});var r=n(67294);const o="base_PRYo",s=e=>{let{children:t}=e;return r.createElement("p",{className:o},r.createElement("span",null,t))}},96240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>f,frontMatter:()=>v,metadata:()=>h,toc:()=>b});var r=n(87462),o=(n(67294),n(3905)),s=n(34695),a=n(31531),i=n(98238),l=n(69840),c=n(42868),p=n(27988),d=n(97022),m=n(21455),u=n(32275);const v={sidebar_position:2},g="Create",h={unversionedId:"host-provision-service/create",id:"host-provision-service/create",title:"Create",description:"Create a single host provision",source:"@site/docs/host-provision-service/create.mdx",sourceDirName:"host-provision-service",slug:"/host-provision-service/create",permalink:"/docs/host-provision-service/create",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/host-provision-service/create.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"apiSidebar",previous:{title:"Host Provision Service",permalink:"/docs/host-provision-service/"},next:{title:"Get",permalink:"/docs/host-provision-service/get"}},y={},b=[],k={toc:b},w="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(w,(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create"},"Create"),(0,o.kt)(a.p,{method:"rpc",name:"Create",mdxType:"ApiMethod"}),(0,o.kt)("p",null,"Create a single host provision"),(0,o.kt)(a.p,{method:"requests",name:"HostProvisionServiceCreateRequest",mdxType:"ApiMethod"}),(0,o.kt)(s.I,{mdxType:"VersionType"},"blockjoy.v1.HostProvisionServiceCreateRequest"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Field"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ip_gateway"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ip_range_from"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ip_range_to"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)(c.s,{text:"org_id",warning:"optional",mdxType:"TableCellWithOption"})),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)(i.D,{codes:l.q,mdxType:"CustomCodeBlock"}),(0,o.kt)(a.p,{method:"returns",name:"DiscoveryServiceServicesResponse",mdxType:"ApiMethod"}),(0,o.kt)(s.I,{mdxType:"VersionType"},"blockjoy.v1.DiscoveryServiceServicesResponse"),(0,o.kt)(p.i,{mdxType:"Table"},(0,o.kt)(d.s,{items:["Field","Type","Description"],mdxType:"TableHead"}),(0,o.kt)(m.R,{mdxType:"TableBody"},(0,o.kt)(u.s,{items:["host_provision","HostProvision","HostProvision entity"],mdxType:"TableBodyRow"},(0,o.kt)(u.s,{items:[(0,o.kt)(c.s,{text:"claimed_at",warning:"optional",mdxType:"TableCellWithOption"}),"Timestamp","If this HostProvision has been used to create a Host, the moment of host creation will be placed here."],rowCounter:1,mdxType:"TableBodyRow"},(0,o.kt)(u.s,{items:["nanos","int (32 bit)",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:["seconds","int (64 bit)",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,o.kt)(u.s,{items:["created_at","Timestamp",""],rowCounter:1,mdxType:"TableBodyRow"},(0,o.kt)(u.s,{items:["nanos","int (32 bit)",""],rowCounter:2,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:["seconds","int (64 bit)",""],rowCounter:2,mdxType:"TableBodyRow"})),(0,o.kt)(u.s,{items:[(0,o.kt)(c.s,{text:"host_id",warning:"optional",mdxType:"TableCellWithOption"}),"string","This field is populated only if this HostProvision has been used to create a host. After that happens, the created host\u2019s id will be placed here."],rowCounter:1,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:["id","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:[(0,o.kt)(c.s,{text:"install_cmd",warning:"optional",mdxType:"TableCellWithOption"}),"string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:["ip_gateway","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:["ip_range_from","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:["ip_range_to","string",""],rowCounter:1,mdxType:"TableBodyRow"}),(0,o.kt)(u.s,{items:[(0,o.kt)(c.s,{text:"org_id",warning:"optional",mdxType:"TableCellWithOption"}),"string",""],rowCounter:1,mdxType:"TableBodyRow"})))))}f.isMDXComponent=!0}}]);