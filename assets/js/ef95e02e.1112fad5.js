"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7899],{15680:(e,t,n)=>{n.d(t,{Z:()=>l});var r,a,s=n(67294);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}const l=e=>{let{title:t,titleId:n,...l}=e;return s.createElement("svg",o({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},l),t?s.createElement("title",{id:n},t):null,r||(r=s.createElement("path",{d:"M9 1a1 1 0 0 0-1-1H1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h3.5V4.5a1 1 0 0 1 1-1H9V1Z",fill:"#F8FAF6"})),a||(a=s.createElement("path",{d:"M11.5 5h-5a.5.5 0 0 0-.5.5v6a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-6a.5.5 0 0 0-.5-.5Z",fill:"#F8FAF6"})))}},31531:(e,t,n)=>{n.d(t,{p:()=>s});var r=n(67294);const a="base_L3V1",s=e=>{let{method:t,name:n}=e;return r.createElement("h2",{className:a},t&&r.createElement("span",null,t)," ",n&&r.createElement("span",null,n))}},98238:(e,t,n)=>{n.d(t,{D:()=>f});var r=n(67294),a=n(87892);const s="wrapper_d4Gc",o="base_cZP3",l="heading_kxJX",c="select_XVTu",i="buttonWrapper_Ucky",p="button_Pj6S",d="copyButtonSuccess_ASuz",u="copyButtonText_cmI7",m="copyButtonSuccessIcon_tD3P";var v;function g(){return g=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},g.apply(this,arguments)}const h=e=>{let{title:t,titleId:n,...a}=e;return r.createElement("svg",g({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?r.createElement("title",{id:n},t):null,v||(v=r.createElement("path",{d:"m3.275 4.461-1.788 1.54 1.788 1.538a.596.596 0 0 1 .21.407.619.619 0 0 1-.132.441.585.585 0 0 1-.396.214.563.563 0 0 1-.425-.14l-2.323-2A.598.598 0 0 1 0 6.001a.617.617 0 0 1 .209-.462l2.323-2a.568.568 0 0 1 .814.08.613.613 0 0 1-.071.842ZM11.79 5.54l-2.323-2a.575.575 0 0 0-.425-.14.567.567 0 0 0-.396.214.607.607 0 0 0-.132.44.615.615 0 0 0 .21.408l1.788 1.54-1.788 1.538a.596.596 0 0 0-.21.407.619.619 0 0 0 .132.441.585.585 0 0 0 .396.214.563.563 0 0 0 .425-.14l2.323-2a.6.6 0 0 0 .209-.46.617.617 0 0 0-.209-.462ZM7.747 1.036a.563.563 0 0 0-.627.159.604.604 0 0 0-.117.2l-3.097 8.8a.618.618 0 0 0 .02.459.588.588 0 0 0 .526.346c.119 0 .235-.038.333-.108a.598.598 0 0 0 .212-.287l3.097-8.8a.618.618 0 0 0-.153-.648.578.578 0 0 0-.194-.12Z",fill:"#F8FAF6"})))};var k=n(15680),b=n(69612);const f=e=>{let{codes:t,defaultLanguage:n="go"}=e;const[v,g]=(0,r.useState)(!1),[f,S]=(0,r.useState)(!0),[y,w]=(0,r.useState)(n),N=(0,r.useMemo)((()=>t?.find((e=>e.language===y))),[t,y]),E=(0,r.useMemo)((()=>t?.map((e=>{let{language:t}=e;return t}))),[t]),x=(0,r.useMemo)((()=>N?.codeShorten&&f?N?.codeShorten:N?.code),[N,f]);return r.createElement("div",{className:s},r.createElement("div",{className:l},r.createElement("select",{className:c,onChange:e=>{var t;(t=e.currentTarget.value,["typescript","javascript","python","go","rust"].includes(t))&&w(e.currentTarget.value)}},E.map((e=>r.createElement("option",{value:e,key:e},e)))),r.createElement("div",{className:i},N?.codeShorten&&r.createElement("button",{className:p,onClick:()=>S(!f)},r.createElement("span",null,f?"Show Full Code":"Show Less Code"),r.createElement(h,null)),r.createElement("button",{onClick:()=>{navigator.clipboard.writeText(x).then((()=>{g(!0),setTimeout((()=>{g(!1)}),1e3)})).catch()},className:v?d:p},r.createElement(b.Z,{className:m}),r.createElement("span",{className:u},r.createElement("span",null,"Copy"),r.createElement(k.Z,null))))),N?r.createElement("div",{className:o},r.createElement(a.dn,{text:x,language:N.language,theme:a.cL,codeBlock:!0})):null)}},27988:(e,t,n)=>{n.d(t,{i:()=>a});var r=n(67294);const a=e=>{let{children:t}=e;return r.createElement("table",null,t)}},21455:(e,t,n)=>{n.d(t,{R:()=>a});var r=n(67294);const a=e=>{let{children:t}=e;return r.createElement("tbody",null,t)}},32275:(e,t,n)=>{n.d(t,{s:()=>p});var r,a=n(67294);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s.apply(this,arguments)}const o=e=>{let{title:t,titleId:n,...o}=e;return a.createElement("svg",s({width:12,height:12,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},o),t?a.createElement("title",{id:n},t):null,r||(r=a.createElement("path",{d:"m9.72 5.28-5-5a1 1 0 0 0-1.415 1.415l4.293 4.293-4.293 4.293a1 1 0 1 0 1.414 1.414l5-5a1 1 0 0 0 0-1.414Z",fill:"#5F615D"})))},l="cell_xH13",c="cell--active_xKr9",i="cellClickable_VRgO",p=e=>{let{items:t,children:n,rowCounter:r=0}=e;const[s,p]=(0,a.useState)(!1),d=e=>n&&0===e,u=e=>0===e&&n?{paddingLeft:12+20*r+"px"}:0===e?{paddingLeft:36+20*r+"px"}:void 0;return a.createElement(a.Fragment,null,a.createElement("tr",null,t?.map(((e,t)=>a.createElement("td",{className:d(t)?i:void 0,onClick:d(t)?()=>p(!s):void 0,style:u(t),key:t},d(t)?a.createElement("span",{className:s?c:l},a.createElement(o,null),e):e)))),a.createElement(a.Fragment,null,s&&n))}},97022:(e,t,n)=>{n.d(t,{s:()=>a});var r=n(67294);const a=e=>{let{items:t}=e;return r.createElement("thead",null,r.createElement("tr",null,t.map(((e,t)=>r.createElement("th",{key:t},e)))))}},42868:(e,t,n)=>{n.d(t,{s:()=>l});var r=n(67294);const a="info_eCVA",s="warning_Cn6H",o="base_cmOb",l=e=>{let{text:t,info:n,warning:l,infoInFront:c,warningInFront:i}=e;return r.createElement("div",{className:o},i&&r.createElement("span",{className:s},i),c&&r.createElement("span",{className:a},c),r.createElement("span",null,t),l&&r.createElement("span",{className:s},l),n&&r.createElement("span",{className:a},n)," ")}},34695:(e,t,n)=>{n.d(t,{I:()=>s});var r=n(67294);const a="base_PRYo",s=e=>{let{children:t}=e;return r.createElement("p",{className:a},r.createElement("span",null,t))}},51463:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>k,frontMatter:()=>p,metadata:()=>u,toc:()=>v});var r=n(87462),a=(n(67294),n(3905)),s=n(34695),o=n(31531),l=n(98238);const c=[{code:'package main\n\nimport (\n   "context"\n   "crypto/tls"\n   "crypto/x509"\n   "fmt"\n   v1 "github.com/blockjoy/api/sdk/go/blockjoy/v1" \n   "google.golang.org/grpc"\n   "google.golang.org/grpc/credentials"\n   "log"\n   "time"\n)\n\nconst (\n   hostServiceAddress = "unknown-grpc:443" \n)\n\nfunc main() {\n   ctx, cancel := context.WithTimeout(context.Background(), 2*time.Second)\n   defer cancel()\n\n   // Set up a connection to the server.\n   hostServiceConn, err := grpc.DialContext(ctx, hostServiceAddress, getSecureOptions()...) \n   if err != nil {                                                                          \n      log.Fatalf("did not connect: %v", err) \n   } \n   defer hostServiceConn.Close() \n   hostService := v1.NewHostServiceClient(hostServiceConn) \n   r1, _ := hostService.Update(ctx, &v1.HostServiceUpdateRequest{})\n   fmt.Println(r1)\n}\n\nfunc getSecureOptions() []grpc.DialOption {\n   systemRoots, err := x509.SystemCertPool()\n   if err != nil {\n      log.Fatal(err)\n   }\n   cred := credentials.NewTLS(&tls.Config{\n      RootCAs: systemRoots,\n   })\n   return []grpc.DialOption{grpc.WithTransportCredentials(cred), grpc.WithBlock()}\n}\n',codeShorten:"resp, _ := hostService.Update(ctx, &v1.HostServiceUpdateRequest{})\nfmt.Println(resp)",language:"go"},{code:'import React, { useEffect, useState } from \'react\'\nimport { grpc } from "@improbable-eng/grpc-web"\nimport { HostServiceUpdateRequest, HostServiceUpdateResponse } from "api/sdk/ts/blockjoy/v1/host_pb"\nimport { HostServiceClient } from "api/sdk/ts/blockjoy/v1/host_pb_service"\n\nvar hostService0 = new HostServiceClient(\'https://unknown-grpc-web\')\nfunction App(){\n    const [response, setResponse] = useState<string>("")\n    useEffect(() => { \n        const hostserviceupdaterequest = new HostServiceUpdateRequest()\n        \n        hostService0.update(hostserviceupdaterequest, getMetadata(), (err, value:HostServiceUpdateResponse|null) => {\n            setResponse(JSON.stringify(err ? err : value))\n        })\n    }, [])\n    return <>\n        <ol>\n        {response}\n        </ol>\n    </>\n}\nconst getMetadata = () => {\n    const meta = new grpc.Metadata()\n    return meta\n}\nexport default App;',codeShorten:'const hostserviceupdaterequest = new HostServiceUpdateRequest();\n\nservice.update(hostserviceupdaterequest, (err, value:HostServiceUpdateResponse|null) => {\n    const resp = JSON.stringify(err ? err : value);\n    console.log("received ", resp);\n})',language:"typescript"},{code:'import React, { useEffect, useState } from \'react\'\nimport { grpc } from "@improbable-eng/grpc-web"\nimport { HostServiceClient } from "api/sdk/ts/blockjoy/v1/host_pb_service"\nimport { HostServiceUpdateRequest, HostServiceUpdateResponse } from "api/sdk/ts/blockjoy/v1/host_pb"\n\nvar hostService0 = new HostServiceClient(\'https://unknown-grpc-web\')\nfunction App(){\n    const [response, setResponse] = useState("")\n    useEffect(() => { \n        const hostserviceupdaterequest = new HostServiceUpdateRequest()\n        \n        hostService0.update(hostserviceupdaterequest, getMetadata(), (err, value) => {\n            setResponse(JSON.stringify(err ? err : value))\n        })\n    }, [])\n    return <>\n        <ol>\n        {response}\n        </ol>\n    </>\n}\nconst getMetadata = () => {\n    const meta = new grpc.Metadata()\n    return meta\n}\nexport default App;',codeShorten:'const hostserviceupdaterequest = new HostServiceUpdateRequest();\n\nservice.update(hostserviceupdaterequest, (err, value) => {\n    const resp = JSON.stringify(err ? err : value);\n    console.log("received ", resp);\n})',language:"javascript"},{code:'extern crate api;\nuse tonic::transport::Channel;\n\nuse api::blockjoy::v1::host_service_client::HostServiceClient;\nuse api::blockjoy::v1::HostServiceUpdateRequest;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n  let channel = Channel::from_static("unknown-grpc")\n    .connect()\n    .await?;\n  let mut client = HostServiceClient::new(channel); \n\n  let request = tonic::Request::new(\n    HostServiceUpdateRequest{\n      id: None,\n      name: None,\n      os: None,\n      os_version: None,\n      version: None\n    });\n// sending request and waiting for response\n  let response = client.update(request).await?.into_inner();\n  println!("RESPONSE={:?}", response);\n  Ok(())\n}',language:"rust"}];var i=n(42868);n(27988),n(97022),n(21455),n(32275);const p={sidebar_position:6},d="Update",u={unversionedId:"host-service/update",id:"host-service/update",title:"Update",description:"Update a single host",source:"@site/docs/host-service/update.mdx",sourceDirName:"host-service",slug:"/host-service/update",permalink:"/docs/host-service/update",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/host-service/update.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"apiSidebar",previous:{title:"Provision",permalink:"/docs/host-service/provision"},next:{title:"Invitation Service",permalink:"/docs/inovation-service/"}},m={},v=[],g={toc:v},h="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"update"},"Update"),(0,a.kt)("p",null,"Update a single host"),(0,a.kt)(o.p,{method:"rpc",name:"Update",mdxType:"ApiMethod"}),(0,a.kt)(o.p,{method:"requests",name:"HostServiceUpdateRequest",mdxType:"ApiMethod"}),(0,a.kt)(s.I,{mdxType:"VersionType"},"blockjoy.v1.HostServiceUpdateRequest"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Field"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(i.s,{text:"name",warning:"optional",mdxType:"TableCellWithOption"})),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(i.s,{text:"os",warning:"optional",mdxType:"TableCellWithOption"})),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"optional string location = 4;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(i.s,{text:"os_version",warning:"optional",mdxType:"TableCellWithOption"})),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)(i.s,{text:"version",warning:"optional",mdxType:"TableCellWithOption"})),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)(l.D,{codes:c,mdxType:"CustomCodeBlock"}),(0,a.kt)(o.p,{method:"returns",name:"HostServiceUpdateResponse",mdxType:"ApiMethod"}),(0,a.kt)(s.I,{mdxType:"VersionType"},"blockjoy.v1.HostServiceUpdateResponse"))}k.isMDXComponent=!0}}]);